[{"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\index.js":"1","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\App.js":"2","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\components\\Products\\Products.js":"3","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\components\\Products\\Product.js":"4","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\reducer.js":"5","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\components\\AddItem\\AddItem.js":"6","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\containers\\Login\\Login.js":"7","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\containers\\Register\\Register.js":"8","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\components\\Account\\Account.js":"9","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\components\\Spinner\\Spinner.js":"10","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\containers\\Cart\\Cart.js":"11","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\containers\\Cart\\CartItem.js":"12"},{"size":711,"mtime":1610748142493,"results":"13","hashOfConfig":"14"},{"size":2098,"mtime":1610751681461,"results":"15","hashOfConfig":"14"},{"size":3795,"mtime":1610663055627,"results":"16","hashOfConfig":"14"},{"size":473,"mtime":1610640731223,"results":"17","hashOfConfig":"14"},{"size":2532,"mtime":1610664900297,"results":"18","hashOfConfig":"14"},{"size":1277,"mtime":1610640733221,"results":"19","hashOfConfig":"14"},{"size":1133,"mtime":1610676913232,"results":"20","hashOfConfig":"14"},{"size":1230,"mtime":1610670252773,"results":"21","hashOfConfig":"14"},{"size":725,"mtime":1610710230819,"results":"22","hashOfConfig":"14"},{"size":227,"mtime":1610640724366,"results":"23","hashOfConfig":"14"},{"size":1336,"mtime":1610665194275,"results":"24","hashOfConfig":"14"},{"size":801,"mtime":1610664237235,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1wqwlvk",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\index.js",[],["57","58"],"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\App.js",["59"],"import React, { useEffect } from \"react\";\nimport classes from \"./App.module.css\";\nimport { BrowserRouter, Link, Route, Redirect } from \"react-router-dom\";\nimport Products from \"./components/Products/Products\";\nimport Login from \"./containers/Login/Login\";\nimport Register from \"./containers/Register/Register\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport Account from \"./components/Account/Account\";\nimport Cart from \"./containers/Cart/Cart\";\nconst App = (props) => {\n  useEffect(() => {\n    axios\n      .get(\"user\")\n      .then((res) => {\n        props.setCurrentUser(res.data);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n  return (\n    <BrowserRouter>\n      <div className={classes.App}>\n        <header>\n          <div className={classes.navbar}>\n            <Link to=\"/\">Home</Link>\n            {props.currentUser.username ? (\n              <>\n                <Link style={{ float: \"right\" }} to=\"/account\">\n                  Account\n                </Link>\n                <Link style={{ float: \"right\" }} to=\"/cart\">\n                  Cart\n                </Link>\n              </>\n            ) : (\n              <Link style={{ float: \"right\" }} to=\"/login\">\n                Login\n              </Link>\n            )}\n          </div>\n        </header>\n\n        <Route exact path=\"/\" component={Products} />\n\n        <Route path=\"/login\" exact component={Login}>\n          {props.loggedIn === false ? <Login /> : <Redirect to=\"/\" />}\n        </Route>\n        <Route path=\"/register\" exact component={Register} />\n        <Route path=\"/account\" exact>\n          {props.loggedIn ? <Account /> : <Redirect to=\"/login\" />}\n        </Route>\n        <Route path=\"/cart\" exact component={Cart} />\n      </div>\n    </BrowserRouter>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.currentUser,\n    loggedIn: state.loggedIn,\n  };\n};\nconst toActions = (dispatch) => {\n  return {\n    setCurrentUser: (user) => dispatch({ type: \"SETCURRENTUSER\", user: user }),\n  };\n};\nexport default connect(mapStateToProps, toActions)(App);\n","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\components\\Products\\Products.js",["60","61","62"],"import classes from \"./Products.module.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Product from \"./Product\";\r\nimport image from \"../../assets/shoes.jpg\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport { saveToDB } from \"../../reducer\";\r\n//categories:\r\n//electronics,\r\n//men clothing,\r\n//women clothing,\r\n//jewelery\r\nconst Products = (props) => {\r\n  let [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    axios\r\n      .get(\"https://fakestoreapi.com/products/\")\r\n      .then(function (response) {\r\n        props.setProducts(response.data);\r\n        setLoading(false);\r\n      })\r\n      .catch(function (error) {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  const getProduct = (type) => {\r\n    props.setProducts(null);\r\n    axios\r\n      .get(\"https://fakestoreapi.com/products/\" + type)\r\n      .then(function (response) {\r\n        props.setProducts(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        console.error(error);\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <div style={{ position: \"relative\" }}>\r\n        <header>\r\n          <img src={image} alt=\"default\" className={classes.mainImage} />\r\n        </header>\r\n      </div>\r\n      <div className={classes.filterOptions}>\r\n        <button onClick={() => getProduct(\"\")}>All</button>\r\n        <button onClick={() => getProduct(\"/category/electronics\")}>\r\n          Electronics\r\n        </button>\r\n        <button onClick={() => getProduct(\"/category/men clothing\")}>\r\n          Men\r\n        </button>\r\n        <button onClick={() => getProduct(\"/category/women clothing\")}>\r\n          Women\r\n        </button>\r\n        <button onClick={() => getProduct(\"/category/jewelery\")}>\r\n          Jewelery\r\n        </button>\r\n      </div>\r\n      <div className={classes.Products}>\r\n        {props.products ? (\r\n          props.products.map((item) => {\r\n            return (\r\n              <Product\r\n                source={item.image}\r\n                info={item.title}\r\n                price={item.price}\r\n                key={item.id}\r\n                added={() => {\r\n                  if (props.cart.length === 0) {\r\n                    props.addToCart({\r\n                      info: item.title,\r\n                      id: item.id,\r\n                      price: item.price,\r\n                      image: item.image,\r\n                      count: 1,\r\n                      totalPrice: item.price,\r\n                    });\r\n                  }\r\n                  const index = props.cart.findIndex((x) => x.id === item.id);\r\n                  if (index === -1 && props.cart.length > 0) {\r\n                    props.addToCart({\r\n                      info: item.title,\r\n                      id: item.id,\r\n                      price: item.price,\r\n                      image: item.image,\r\n                      count: 1,\r\n                      totalPrice: item.price,\r\n                    });\r\n                  } else if (index >= 0) {\r\n                    props.increaseCount(item.id);\r\n                  }\r\n                }}\r\n              />\r\n            );\r\n          })\r\n        ) : (\r\n          <Spinner />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    products: state.products,\r\n    cart: state.currentCart,\r\n  };\r\n};\r\nconst toActions = (dispatch) => {\r\n  return {\r\n    setProducts: (products) =>\r\n      dispatch({ type: \"SETPRODUCTS\", products: products }),\r\n    addToCart: (obj) =>\r\n      dispatch({\r\n        type: \"ADDTOCART\",\r\n        obj,\r\n      }),\r\n    increaseCount: (id) => dispatch({ type: \"INCREASECOUNT\", id: id , incdec: 'increment'}),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, toActions)(Products);\r\n","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\components\\Products\\Product.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\reducer.js",["63","64"],"import axios from \"axios\";\r\n\r\nlet initialState = {\r\n  currentUser: {},\r\n  loggedIn: false,\r\n  products: [],\r\n  currentCart: [],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADDITEM\":\r\n      return {\r\n        items: state.items.concat(action.payload),\r\n      };\r\n    case \"SETCURRENTUSER\":\r\n      return {\r\n        ...state,\r\n        currentUser: action.user,\r\n        loggedIn: true,\r\n      };\r\n    case \"SETPRODUCTS\":\r\n      return {\r\n        ...state,\r\n        products: action.products,\r\n      };\r\n    case \"ADDTOCART\":\r\n      return {\r\n        ...state,\r\n        currentCart: state.currentCart.concat(action.obj),\r\n      };\r\n    case \"INCREASECOUNT\":\r\n      const index = state.currentCart.findIndex((x) => x.id === action.id);\r\n      const count = state.currentCart[index].count;\r\n      if (action.incdec === \"increment\") {\r\n        return {\r\n          ...state,\r\n          currentCart: [\r\n            ...state.currentCart,\r\n            (state.currentCart[index].count += 1),\r\n            (state.currentCart[index].totalPrice =\r\n              state.currentCart[index].price * state.currentCart[index].count),\r\n          ],\r\n        };\r\n      }\r\n      if (action.incdec === \"decrement\" && count > 1) {\r\n        return {\r\n          ...state,\r\n          currentCart: [\r\n            ...state.currentCart,\r\n            (state.currentCart[index].count -= 1),\r\n            (state.currentCart[index].totalPrice =\r\n              state.currentCart[index].price * state.currentCart[index].count),\r\n          ],\r\n        };\r\n      }\r\n    case \"REMOVEITEM\":\r\n      console.log(\"trying to remove\");\r\n      const indx = state.currentCart.findIndex((x) => x.id === action.id);\r\n      return {\r\n        ...state,\r\n        currentCart: state.currentCart.filter((_, index) => index !== indx),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n\r\n/* export const saveToDB = () => async (dispatch, getState) => {\r\n  const cart = getState.cart;\r\n  const currentUser = getState.currentUser;\r\n  await axios\r\n    .post(\"http://localhost:4000/cart\", {\r\n      cart: cart,\r\n      email: currentUser.email,\r\n    })\r\n    .then(() => console.log(\"Updated cart\"))\r\n    .catch((err) => console.log(err));\r\n};\r\nexport const loadToStore = () => async (dispatch, getState) => {\r\n  let cart;\r\n  await axios\r\n    .get(\"http://localhost:4000/cart\")\r\n    .then((res) => (cart = res.data))\r\n    .catch((err) => console.log(err));\r\n  dispatch({ type: \"SETCART\", cart: cart });\r\n};\r\n */\r\n","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\components\\AddItem\\AddItem.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\containers\\Login\\Login.js",["65"],"import React, { useState } from \"react\";\r\nimport classes from \"./Login.module.css\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nconst Login = (props) => {\r\n  let [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const login = () => {\r\n    axios\r\n      .post(\"login\", user)\r\n      .then((res) => {\r\n        localStorage.setItem(\"token\", res.data.accessToken);\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  return (\r\n    <div className={classes.Login}>\r\n      <h1>Login</h1>\r\n      <input\r\n        placeholder=\"email\"\r\n        type=\"email\"\r\n        onChange={(e) => setUser({ ...user, email: e.target.value })}\r\n      />\r\n      <input\r\n        placeholder=\"password\"\r\n        type=\"password\"\r\n        onChange={(e) => setUser({ ...user, password: e.target.value })}\r\n      />\r\n      <button onClick={login}>Login</button>\r\n      <p>\r\n        Don't have an account?\r\n        <Link className={classes.link} to=\"/register\">\r\n          Sign up here\r\n        </Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\containers\\Register\\Register.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\components\\Account\\Account.js",["66"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Login from \"../../containers/Login/Login\";\r\nimport classes from \"./Account.module.css\";\r\nconst Account = (props) => {\r\n  return (\r\n    <div className={classes.Account}>\r\n      <h1>Account info</h1>\r\n      <p>ID: {props.user._id}</p>\r\n      <p>Email: {props.user.email}</p>\r\n      <p>Username: {props.user.username}</p>\r\n      <button\r\n        onClick={() => {\r\n          localStorage.clear();\r\n          window.location.reload();\r\n        }}\r\n      >\r\n        Logout\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.currentUser,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Account);\r\n","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\components\\Spinner\\Spinner.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\containers\\Cart\\Cart.js",["67"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CartItem from \"./CartItem.js\";\r\nconst Cart = (props) => {\r\n  return (\r\n    <div>\r\n      {props.cart ? (\r\n        props.cart.map((item) => {\r\n          if (typeof item !== \"number\") {\r\n            return (\r\n              <CartItem\r\n                info={item.info}\r\n                count={item.count}\r\n                totalPrice={item.totalPrice.toFixed(2)}\r\n                image={item.image}\r\n                key={item.id}\r\n                increment={() => props.increaseCount(item.id, \"increment\")}\r\n                    decrement={() => props.increaseCount(item.id, \"decrement\")}\r\n                    remove={() => props.removeItem(item.id)}\r\n              />\r\n            );\r\n          }\r\n        })\r\n      ) : (\r\n        <h1 style={{ margin: \"0 auto\", marginTop: \"30px\" }}>\r\n          Start adding items to your cart!\r\n        </h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cart: state.currentCart,\r\n  };\r\n};\r\nconst toActions = (dispatch) => {\r\n    return {\r\n        increaseCount: (id, IncDec) =>\r\n            dispatch({type: \"INCREASECOUNT\", id: id, incdec: IncDec}),\r\n        removeItem: (id) => dispatch({type:'REMOVEITEM', id: id})\r\n    };\r\n};\r\nexport default connect(mapStateToProps, toActions)(Cart);\r\n","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\containers\\Cart\\CartItem.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":19,"column":6,"nodeType":"74","endLine":19,"endColumn":8,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":8,"column":10,"nodeType":"78","messageId":"79","endLine":8,"endColumn":18},{"ruleId":"76","severity":1,"message":"80","line":15,"column":8,"nodeType":"78","messageId":"79","endLine":15,"endColumn":15},{"ruleId":"72","severity":1,"message":"73","line":27,"column":6,"nodeType":"74","endLine":27,"endColumn":8,"suggestions":"81"},{"ruleId":"76","severity":1,"message":"82","line":1,"column":8,"nodeType":"78","messageId":"79","endLine":1,"endColumn":13},{"ruleId":"83","severity":1,"message":"84","line":57,"column":5,"nodeType":"85","messageId":"86","endLine":63,"endColumn":9},{"ruleId":"76","severity":1,"message":"87","line":3,"column":16,"nodeType":"78","messageId":"79","endLine":3,"endColumn":24},{"ruleId":"76","severity":1,"message":"88","line":3,"column":8,"nodeType":"78","messageId":"79","endLine":3,"endColumn":13},{"ruleId":"89","severity":1,"message":"90","line":8,"column":31,"nodeType":"91","messageId":"92","endLine":8,"endColumn":33},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["95"],"no-unused-vars","'saveToDB' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.",["96"],"'axios' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'Redirect' is defined but never used.","'Login' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"97","fix":"99"},"Update the dependencies array to be: [props]",{"range":"100","text":"101"},{"range":"102","text":"101"},[664,666],"[props]",[791,793]]