[{"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\index.js":"1","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\App.js":"2","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\components\\Products\\Products.js":"3","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\components\\Products\\Product.js":"4","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\reducer.js":"5","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\components\\AddItem\\AddItem.js":"6","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\containers\\Login\\Login.js":"7","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\containers\\Register\\Register.js":"8","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\components\\Account\\Account.js":"9","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\components\\Spinner\\Spinner.js":"10","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\containers\\Cart\\Cart.js":"11","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\containers\\Cart\\CartItem.js":"12","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\actions\\actions.js":"13"},{"size":711,"mtime":1611167439991,"results":"14","hashOfConfig":"15"},{"size":2455,"mtime":1611167370288,"results":"16","hashOfConfig":"15"},{"size":3817,"mtime":1611166840461,"results":"17","hashOfConfig":"15"},{"size":521,"mtime":1611165415683,"results":"18","hashOfConfig":"15"},{"size":2411,"mtime":1611166928933,"results":"19","hashOfConfig":"15"},{"size":1277,"mtime":1610640733221,"results":"20","hashOfConfig":"15"},{"size":1679,"mtime":1611166868910,"results":"21","hashOfConfig":"15"},{"size":1726,"mtime":1610841375189,"results":"22","hashOfConfig":"15"},{"size":1756,"mtime":1611165144972,"results":"23","hashOfConfig":"15"},{"size":227,"mtime":1611164948834,"results":"24","hashOfConfig":"15"},{"size":4881,"mtime":1611166854575,"results":"25","hashOfConfig":"15"},{"size":826,"mtime":1610843017177,"results":"26","hashOfConfig":"15"},{"size":995,"mtime":1611166825730,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1wqwlvk",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\index.js",[],["59","60"],"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\App.js",["61"],"import React, { useEffect } from \"react\";\nimport classes from \"./App.module.css\";\nimport { BrowserRouter, Link, Route, Redirect } from \"react-router-dom\";\nimport Products from \"./components/Products/Products\";\nimport Login from \"./containers/Login/Login\";\nimport Register from \"./containers/Register/Register\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport Account from \"./components/Account/Account\";\nimport Cart from \"./containers/Cart/Cart\";\nimport * as actions from \"./actions/actions\";\nconst App = (props) => {\n  useEffect(() => {\n    axios\n      .get(\"user\")\n      .then((res) => {\n        props.setCurrentUser(res.data);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n  return (\n    <BrowserRouter>\n      <div className={classes.App}>\n        <header>\n          <div className={classes.navbar}>\n            <Link to=\"/\">Home</Link>\n            {props.currentUser.username ? (\n              <>\n                <Link style={{ float: \"right\" }} to=\"/account\">\n                  Account\n                </Link>\n                <Link\n                  style={{ float: \"right\" }}\n                  className={classes.cart}\n                  to=\"/cart\"\n                >\n                  {props.cart.length > 0 ? (\n                    <div className={classes.redDot}>{props.cart.length}</div>\n                  ) : null}\n                  Cart\n                </Link>\n              </>\n            ) : (\n              <Link style={{ float: \"right\" }} to=\"/login\">\n                Login\n              </Link>\n            )}\n          </div>\n        </header>\n\n        <Route exact path=\"/\" component={Products} />\n\n        <Route path=\"/login\" exact>\n          {props.loggedIn === false ? <Login /> : <Redirect to=\"/\" />}\n        </Route>\n        <Route path=\"/register\" exact component={Register} />\n        <Route path=\"/account\" exact>\n          {props.loggedIn ? <Account /> : <Redirect to=\"/login\" />}\n        </Route>\n        <Route path=\"/cart\" exact>\n          {props.loggedIn ? <Cart /> : <Redirect to=\"/login\" />}\n        </Route>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.currentUser,\n    loggedIn: state.loggedIn,\n    cart: state.currentCart,\n  };\n};\nconst toActions = (dispatch) => {\n  return {\n    setCurrentUser: (user) => dispatch(actions.setCurrentUser(user)),\n  };\n};\nexport default connect(mapStateToProps, toActions)(App);\n","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\components\\Products\\Products.js",["62","63"],"import classes from \"./Products.module.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Product from \"./Product\";\r\nimport image from \"../../assets/shoes.jpg\";\r\nimport { connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport * as actions from \"../../actions/actions\";\r\n//categories:\r\n//electronics,\r\n//men clothing,\r\n//women clothing,\r\n//jewelery\r\nconst Products = (props) => {\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://fakestoreapi.com/products/\")\r\n      .then(function (response) {\r\n        props.setProducts(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  const getProduct = (type) => {\r\n    props.setProducts(null);\r\n    axios\r\n      .get(\"https://fakestoreapi.com/products/\" + type)\r\n      .then(function (response) {\r\n        props.setProducts(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ position: \"relative\" }}>\r\n        <header>\r\n          <img src={image} alt=\"default\" className={classes.mainImage} />\r\n        </header>\r\n      </div>\r\n      <div className={classes.filterOptions}>\r\n        <button onClick={() => getProduct(\"\")}>All</button>\r\n        <button onClick={() => getProduct(\"/category/electronics\")}>\r\n          Electronics\r\n        </button>\r\n        <button onClick={() => getProduct(\"/category/men clothing\")}>\r\n          Men\r\n        </button>\r\n        <button onClick={() => getProduct(\"/category/women clothing\")}>\r\n          Women\r\n        </button>\r\n        <button onClick={() => getProduct(\"/category/jewelery\")}>\r\n          Jewelery\r\n        </button>\r\n      </div>\r\n      <div className={classes.Products}>\r\n        {props.products ? (\r\n          props.products.map((item) => {\r\n            return (\r\n              <Product\r\n                source={item.image}\r\n                info={item.title}\r\n                price={item.price}\r\n                key={item.id}\r\n                added={() => {\r\n                  if (props.cart.length === 0) {\r\n                    props.addToCart({\r\n                      info: item.title,\r\n                      id: item.id,\r\n                      price: item.price,\r\n                      image: item.image,\r\n                      count: 1,\r\n                      totalPrice: item.price,\r\n                    });\r\n                  }\r\n                  const index = props.cart.findIndex((x) => x.id === item.id);\r\n                  if (index === -1 && props.cart.length > 0) {\r\n                    props.addToCart({\r\n                      info: item.title,\r\n                      id: item.id,\r\n                      price: item.price,\r\n                      image: item.image,\r\n                      count: 1,\r\n                      totalPrice: item.price,\r\n                    });\r\n                  } else if (index >= 0) {\r\n                    props.increaseCount(item.id);\r\n                    props.clearCart();\r\n                  }\r\n                }}\r\n              />\r\n            );\r\n          })\r\n        ) : (\r\n          <Spinner />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    products: state.products,\r\n    cart: state.currentCart,\r\n    user: state.currentUser,\r\n  };\r\n};\r\nconst toActions = (dispatch) => {\r\n  return {\r\n    setProducts: (products) => dispatch(actions.setProducts(products)),\r\n    addToCart: (obj) =>\r\n      dispatch({\r\n        type: \"ADDTOCART\",\r\n        obj,\r\n      }),\r\n    increaseCount: (id) =>\r\n      dispatch(actions.increaseCount({ id: id, incdec: \"increment\" })),\r\n    clearCart: () => dispatch(actions.cartClearing()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, toActions)(Products);\r\n","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\components\\Products\\Product.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\reducer.js",["64"],"\r\n\r\nlet initialState = {\r\n  currentUser: {},\r\n  loggedIn: false,\r\n  products: [],\r\n  currentCart: [],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SETCURRENTUSER\":\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload,\r\n        loggedIn: true,\r\n      };\r\n    case \"SETPRODUCTS\":\r\n      return {\r\n        ...state,\r\n        products: action.payload,\r\n      };\r\n    case \"ADDTOCART\":\r\n      return {\r\n        ...state,\r\n        currentCart: state.currentCart.concat(action.obj),\r\n      };\r\n    case \"INCREASECOUNT\":\r\n      const id = action.payload.id;\r\n      const incdec = action.payload.incdec;\r\n      const index = state.currentCart.findIndex((x) => x.id === id);\r\n      const count = state.currentCart[index].count;\r\n      if (incdec === \"increment\") {\r\n        return {\r\n          ...state,\r\n          currentCart: [\r\n            ...state.currentCart,\r\n            (state.currentCart[index].count += 1),\r\n            (state.currentCart[index].totalPrice =\r\n              state.currentCart[index].price * state.currentCart[index].count),\r\n          ],\r\n        };\r\n      }\r\n      if (incdec === \"decrement\" && count > 1) {\r\n        return {\r\n          ...state,\r\n          currentCart: [\r\n            ...state.currentCart,\r\n            (state.currentCart[index].count -= 1),\r\n            (state.currentCart[index].totalPrice =\r\n              state.currentCart[index].price * state.currentCart[index].count),\r\n          ],\r\n        };\r\n      }\r\n    case \"REMOVEITEM\":\r\n      const indx = state.currentCart.findIndex(\r\n        (x) => x.id === action.payload.id\r\n      );\r\n      return {\r\n        ...state,\r\n        currentCart: state.currentCart.filter((_, index) => index !== indx),\r\n      };\r\n    case \"CLEARCART\":\r\n      const filteredArr = state.currentCart.filter(\r\n        (x) => typeof x !== \"number\"\r\n      );\r\n      return {\r\n        ...state,\r\n        currentCart: filteredArr,\r\n      };\r\n    case \"TOTALCLEAR\":\r\n      return {\r\n        ...state,\r\n        currentCart: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n\r\n/* export const loadToStore = () => async (dispatch, getState) => {\r\n  let cart;\r\n  await axios\r\n    .get(\"http://localhost:4000/cart\")\r\n    .then((res) => (cart = res.data))\r\n    .catch((err) => console.log(err));\r\n  dispatch({ type: \"SETCART\", cart: cart });\r\n};\r\n \r\n */\r\n","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\components\\AddItem\\AddItem.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\containers\\Login\\Login.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\containers\\Register\\Register.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\components\\Account\\Account.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\components\\Spinner\\Spinner.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\containers\\Cart\\Cart.js",["65"],"import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CartItem from \"./CartItem.js\";\r\nimport classes from \"./Cart.module.css\";\r\nimport * as actions from \"../../actions/actions\";\r\nimport axios from \"axios\";\r\nconst Cart = (props) => {\r\n  let [show, setShow] = useState(false);\r\n  let [accountShow, setAccountShow] = useState(false);\r\n  let [emailInfo, setEmailInfo] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    address: \"\",\r\n  });\r\n  const sendEmail = (content) => {\r\n    axios\r\n      .post(\"email\", content)\r\n      .then((res) => console.log(res))\r\n      .catch((err) => console.log(err));\r\n  };\r\n  return (\r\n    <div>\r\n      {accountShow ? (\r\n        <div>\r\n          <h1\r\n            style={{ textAlign: \"center\", marginTop: \"15px\" }}\r\n            className={classes.accepted}\r\n          >\r\n            Thank you for ordering! Check your email for order details or go to Account \r\n          </h1>\r\n        </div>\r\n      ) : null}\r\n      {props.cart.length > 0 && !accountShow\r\n        ? props.cart.map((item) => {\r\n            if (typeof item !== \"number\") {\r\n              return (\r\n                <CartItem\r\n                  info={item.info}\r\n                  count={item.count}\r\n                  totalPrice={item.totalPrice.toFixed(2)}\r\n                  image={item.image}\r\n                  key={item.id}\r\n                  increment={() => {\r\n                    props.increaseCount(item.id, \"increment\");\r\n                    props.clearCart();\r\n                  }}\r\n                  decrement={() => {\r\n                    props.increaseCount(item.id, \"decrement\");\r\n                    props.clearCart();\r\n                  }}\r\n                  remove={() => props.removeItem(item.id)}\r\n                />\r\n              );\r\n            }\r\n          })\r\n        : null}\r\n      {props.cart.length === 0 && !accountShow ? (\r\n        <h1 className={classes.empty}>Your cart is empty, add some items!</h1>\r\n      ) : null}\r\n      {show ? (\r\n        <div className={classes.orderForm}>\r\n          <div className={classes.form}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Full name\"\r\n              onChange={(e) =>\r\n                setEmailInfo({ ...emailInfo, name: e.target.value })\r\n              }\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Email\"\r\n              onChange={(e) =>\r\n                setEmailInfo({ ...emailInfo, email: e.target.value })\r\n              }\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Address\"\r\n              onChange={(e) =>\r\n                setEmailInfo({ ...emailInfo, address: e.target.value })\r\n              }\r\n            />\r\n            <p>\r\n              Total to pay: $\r\n              {props.cart\r\n                .reduce((a, b) => {\r\n                  return a + b.totalPrice;\r\n                }, 0)\r\n                .toFixed(2)}\r\n            </p>\r\n            <button\r\n              onClick={() => {\r\n                sendEmail({\r\n                  content: {\r\n                    itemsInfo: props.cart.map((item) => {\r\n                      return `${item.count}x ${item.info} - $${item.price}`;\r\n                    }),\r\n                    totalPrice: props.cart\r\n                      .reduce((a, b) => {\r\n                        return a + b.totalPrice;\r\n                      }, 0)\r\n                      .toFixed(2),\r\n                  },\r\n                  userInfo: emailInfo,\r\n                });\r\n                setAccountShow(true);\r\n                setShow(false);\r\n                props.totalClear();\r\n                setTimeout(() => {\r\n                  setAccountShow(false);\r\n                }, 6000);\r\n              }}\r\n            >\r\n              Send order\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n      {props.cart.length > 0 && !show && !accountShow ? (\r\n        <div className={classes.order}>\r\n          <button\r\n            onClick={() => {\r\n              setShow(true);\r\n            }}\r\n          >\r\n            Order now\r\n          </button>\r\n          <p>\r\n            total price: $\r\n            {props.cart\r\n              .reduce((a, b) => {\r\n                return a + b.totalPrice;\r\n              }, 0)\r\n              .toFixed(2)}\r\n          </p>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cart: state.currentCart,\r\n  };\r\n};\r\nconst toActions = (dispatch) => {\r\n  return {\r\n    increaseCount: (id, IncDec) =>\r\n      dispatch(actions.increaseCount({ id: id, incdec: IncDec })),\r\n    removeItem: (id) => dispatch(actions.removeItem({ id: id })),\r\n    clearCart: () => dispatch(actions.cartClearing()),\r\n    totalClear: () => dispatch(actions.totalClear()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, toActions)(Cart);\r\n","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\containers\\Cart\\CartItem.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\actions\\actions.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":20,"column":6,"nodeType":"72","endLine":20,"endColumn":8,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":2,"column":17,"nodeType":"76","messageId":"77","endLine":2,"endColumn":25},{"ruleId":"70","severity":1,"message":"71","line":24,"column":6,"nodeType":"72","endLine":24,"endColumn":8,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":55,"column":5,"nodeType":"81","messageId":"82","endLine":62,"endColumn":9},{"ruleId":"83","severity":1,"message":"84","line":34,"column":33,"nodeType":"85","messageId":"86","endLine":34,"endColumn":35},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["89"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["90"],"no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"91","fix":"93"},"Update the dependencies array to be: [props]",{"range":"94","text":"95"},{"range":"96","text":"95"},[710,712],"[props]",[699,701]]