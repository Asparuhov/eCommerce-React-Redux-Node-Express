[{"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\index.js":"1","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\App.js":"2","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\components\\Products\\Products.js":"3","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\components\\Products\\Product.js":"4","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\reducer.js":"5","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\components\\AddItem\\AddItem.js":"6","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\containers\\Login\\Login.js":"7","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\containers\\Register\\Register.js":"8","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\components\\Account\\Account.js":"9","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\components\\Spinner\\Spinner.js":"10","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\containers\\Cart\\Cart.js":"11","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\containers\\Cart\\CartItem.js":"12","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\actions\\actions.js":"13","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\containers\\WishList\\WishList.js":"14","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\containers\\WishList\\WishItem.js":"15"},{"size":695,"mtime":1611172339839,"results":"16","hashOfConfig":"17"},{"size":3608,"mtime":1611176664233,"results":"18","hashOfConfig":"17"},{"size":4197,"mtime":1611176469778,"results":"19","hashOfConfig":"17"},{"size":544,"mtime":1611174095578,"results":"20","hashOfConfig":"17"},{"size":2853,"mtime":1611175424856,"results":"21","hashOfConfig":"17"},{"size":1277,"mtime":1610640733221,"results":"22","hashOfConfig":"23"},{"size":1679,"mtime":1611166868910,"results":"24","hashOfConfig":"17"},{"size":1726,"mtime":1610841375189,"results":"25","hashOfConfig":"17"},{"size":1649,"mtime":1611172821782,"results":"26","hashOfConfig":"17"},{"size":227,"mtime":1611164948834,"results":"27","hashOfConfig":"17"},{"size":4881,"mtime":1611166854575,"results":"28","hashOfConfig":"17"},{"size":826,"mtime":1610843017177,"results":"29","hashOfConfig":"17"},{"size":1249,"mtime":1611175251332,"results":"30","hashOfConfig":"17"},{"size":2782,"mtime":1611176772023,"results":"31","hashOfConfig":"17"},{"size":538,"mtime":1611173943570,"results":"32","hashOfConfig":"17"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f4j098",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wqwlvk",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\index.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\App.js",["66"],"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\components\\Products\\Products.js",["67","68"],"import classes from \"./Products.module.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Product from \"./Product\";\r\nimport image from \"../../assets/shoes.jpg\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport * as actions from \"../../actions/actions\";\r\n//categories:\r\n//electronics,\r\n//men clothing,\r\n//women clothing,\r\n//jewelery\r\nconst Products = (props) => {\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://fakestoreapi.com/products/\")\r\n      .then(function (response) {\r\n        props.setProducts(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  const getProduct = (type) => {\r\n    props.setProducts(null);\r\n    axios\r\n      .get(\"https://fakestoreapi.com/products/\" + type)\r\n      .then(function (response) {\r\n        props.setProducts(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ position: \"relative\" }}>\r\n        <header>\r\n          <img src={image} alt=\"default\" className={classes.mainImage} />\r\n        </header>\r\n      </div>\r\n      <div className={classes.filterOptions}>\r\n        <button onClick={() => getProduct(\"\")}>All</button>\r\n        <button onClick={() => getProduct(\"/category/electronics\")}>\r\n          Electronics\r\n        </button>\r\n        <button onClick={() => getProduct(\"/category/men clothing\")}>\r\n          Men\r\n        </button>\r\n        <button onClick={() => getProduct(\"/category/women clothing\")}>\r\n          Women\r\n        </button>\r\n        <button onClick={() => getProduct(\"/category/jewelery\")}>\r\n          Jewelery\r\n        </button>\r\n      </div>\r\n      <div className={classes.Products}>\r\n        {props.products ? (\r\n          props.products.map((item) => {\r\n            return (\r\n              <Product\r\n                source={item.image}\r\n                info={item.title}\r\n                price={item.price}\r\n                key={item.id}\r\n                toWish={() => {\r\n                  const index = props.wishlist.findIndex(\r\n                    (x) => x.id === item.id\r\n                  );\r\n                  if (index === -1) {\r\n                    props.toWish(item);\r\n                  }\r\n                }}\r\n                added={() => {\r\n                  if (props.cart.length === 0) {\r\n                    props.addToCart({\r\n                      info: item.title,\r\n                      id: item.id,\r\n                      price: item.price,\r\n                      image: item.image,\r\n                      count: 1,\r\n                      totalPrice: item.price,\r\n                    });\r\n                  }\r\n                  const index = props.cart.findIndex((x) => x.id === item.id);\r\n                  if (index === -1 && props.cart.length > 0) {\r\n                    props.addToCart({\r\n                      info: item.title,\r\n                      id: item.id,\r\n                      price: item.price,\r\n                      image: item.image,\r\n                      count: 1,\r\n                      totalPrice: item.price,\r\n                    });\r\n                  } else if (index >= 0) {\r\n                    props.increaseCount(item.id);\r\n                    props.clearCart();\r\n                  }\r\n                }}\r\n              />\r\n            );\r\n          })\r\n        ) : (\r\n          <Spinner />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    products: state.products,\r\n    cart: state.currentCart,\r\n    user: state.currentUser,\r\n    wishlist: state.currentWishList,\r\n  };\r\n};\r\nconst toActions = (dispatch) => {\r\n  return {\r\n    setProducts: (products) => dispatch(actions.setProducts(products)),\r\n    addToCart: (obj) =>\r\n      dispatch({\r\n        type: \"ADDTOCART\",\r\n        obj,\r\n      }),\r\n    increaseCount: (id) =>\r\n      dispatch(actions.increaseCount({ id: id, incdec: \"increment\" })),\r\n    clearCart: () => dispatch(actions.cartClearing()),\r\n    toWish: (product) => dispatch(actions.toWish(product)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, toActions)(Products);\r\n",["69","70"],"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\components\\Products\\Product.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\reducer.js",["71"],"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\components\\AddItem\\AddItem.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\containers\\Login\\Login.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\containers\\Register\\Register.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\components\\Account\\Account.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\components\\Spinner\\Spinner.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\containers\\Cart\\Cart.js",["72"],"import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CartItem from \"./CartItem.js\";\r\nimport classes from \"./Cart.module.css\";\r\nimport * as actions from \"../../actions/actions\";\r\nimport axios from \"axios\";\r\nconst Cart = (props) => {\r\n  let [show, setShow] = useState(false);\r\n  let [accountShow, setAccountShow] = useState(false);\r\n  let [emailInfo, setEmailInfo] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    address: \"\",\r\n  });\r\n  const sendEmail = (content) => {\r\n    axios\r\n      .post(\"email\", content)\r\n      .then((res) => console.log(res))\r\n      .catch((err) => console.log(err));\r\n  };\r\n  return (\r\n    <div>\r\n      {accountShow ? (\r\n        <div>\r\n          <h1\r\n            style={{ textAlign: \"center\", marginTop: \"15px\" }}\r\n            className={classes.accepted}\r\n          >\r\n            Thank you for ordering! Check your email for order details or go to Account \r\n          </h1>\r\n        </div>\r\n      ) : null}\r\n      {props.cart.length > 0 && !accountShow\r\n        ? props.cart.map((item) => {\r\n            if (typeof item !== \"number\") {\r\n              return (\r\n                <CartItem\r\n                  info={item.info}\r\n                  count={item.count}\r\n                  totalPrice={item.totalPrice.toFixed(2)}\r\n                  image={item.image}\r\n                  key={item.id}\r\n                  increment={() => {\r\n                    props.increaseCount(item.id, \"increment\");\r\n                    props.clearCart();\r\n                  }}\r\n                  decrement={() => {\r\n                    props.increaseCount(item.id, \"decrement\");\r\n                    props.clearCart();\r\n                  }}\r\n                  remove={() => props.removeItem(item.id)}\r\n                />\r\n              );\r\n            }\r\n          })\r\n        : null}\r\n      {props.cart.length === 0 && !accountShow ? (\r\n        <h1 className={classes.empty}>Your cart is empty, add some items!</h1>\r\n      ) : null}\r\n      {show ? (\r\n        <div className={classes.orderForm}>\r\n          <div className={classes.form}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Full name\"\r\n              onChange={(e) =>\r\n                setEmailInfo({ ...emailInfo, name: e.target.value })\r\n              }\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Email\"\r\n              onChange={(e) =>\r\n                setEmailInfo({ ...emailInfo, email: e.target.value })\r\n              }\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Address\"\r\n              onChange={(e) =>\r\n                setEmailInfo({ ...emailInfo, address: e.target.value })\r\n              }\r\n            />\r\n            <p>\r\n              Total to pay: $\r\n              {props.cart\r\n                .reduce((a, b) => {\r\n                  return a + b.totalPrice;\r\n                }, 0)\r\n                .toFixed(2)}\r\n            </p>\r\n            <button\r\n              onClick={() => {\r\n                sendEmail({\r\n                  content: {\r\n                    itemsInfo: props.cart.map((item) => {\r\n                      return `${item.count}x ${item.info} - $${item.price}`;\r\n                    }),\r\n                    totalPrice: props.cart\r\n                      .reduce((a, b) => {\r\n                        return a + b.totalPrice;\r\n                      }, 0)\r\n                      .toFixed(2),\r\n                  },\r\n                  userInfo: emailInfo,\r\n                });\r\n                setAccountShow(true);\r\n                setShow(false);\r\n                props.totalClear();\r\n                setTimeout(() => {\r\n                  setAccountShow(false);\r\n                }, 6000);\r\n              }}\r\n            >\r\n              Send order\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n      {props.cart.length > 0 && !show && !accountShow ? (\r\n        <div className={classes.order}>\r\n          <button\r\n            onClick={() => {\r\n              setShow(true);\r\n            }}\r\n          >\r\n            Order now\r\n          </button>\r\n          <p>\r\n            total price: $\r\n            {props.cart\r\n              .reduce((a, b) => {\r\n                return a + b.totalPrice;\r\n              }, 0)\r\n              .toFixed(2)}\r\n          </p>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cart: state.currentCart,\r\n  };\r\n};\r\nconst toActions = (dispatch) => {\r\n  return {\r\n    increaseCount: (id, IncDec) =>\r\n      dispatch(actions.increaseCount({ id: id, incdec: IncDec })),\r\n    removeItem: (id) => dispatch(actions.removeItem({ id: id })),\r\n    clearCart: () => dispatch(actions.cartClearing()),\r\n    totalClear: () => dispatch(actions.totalClear()),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, toActions)(Cart);\r\n","C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\containers\\Cart\\CartItem.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\actions\\actions.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\containers\\WishList\\WishList.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\eCommerce-React-Redux-Node-Express\\frontend\\src\\containers\\WishList\\WishItem.js",[],{"ruleId":"73","severity":1,"message":"74","line":26,"column":6,"nodeType":"75","endLine":26,"endColumn":8,"suggestions":"76"},{"ruleId":"77","severity":1,"message":"78","line":2,"column":17,"nodeType":"79","messageId":"80","endLine":2,"endColumn":25},{"ruleId":"73","severity":1,"message":"74","line":24,"column":6,"nodeType":"75","endLine":24,"endColumn":8,"suggestions":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":54,"column":5,"nodeType":"88","messageId":"89","endLine":61,"endColumn":9},{"ruleId":"90","severity":1,"message":"91","line":34,"column":33,"nodeType":"92","messageId":"93","endLine":34,"endColumn":35},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["94"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["95"],"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",{"desc":"98","fix":"99"},{"desc":"98","fix":"100"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [props]",{"range":"101","text":"102"},{"range":"103","text":"102"},[984,986],"[props]",[700,702]]